__NUXT_JSONP__("/basic/knowledge/github-pages-spa-router", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J){return {data:[{document:{slug:"github-pages-spa-router",description:"",title:"Github Pages 中部署 SPA（路由单页应用）",menuTitle:"Github部署SPA应用",position:1207,category:"知识篇-基础知识",toc:[{id:s,depth:t,text:u},{id:v,depth:t,text:w}],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:a,value:"Github Pages 特性的几点说明："}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"不支持 Rewrite，所以原则上来说，静态单页应用路由是无法实现的，因为刷新页面后就会报 404 错误"}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"支持自定义 404，那么我们就可以通过 404.html 来做点文章"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"参考该评论："},{type:b,tag:g,props:{href:"https:\u002F\u002Fgithub.com\u002Fisaacs\u002Fgithub\u002Fissues\u002F408#issuecomment-216721113",rel:[k,l,m],target:n},children:[{type:a,value:"Github #408"}]}]},{type:a,value:c},{type:b,tag:y,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"无论是 Vue、Angular、React，打包生成的静态单页应用，理论上来讲都是可以利用 404 的特性 部署到 Github Pages 上的。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"这里我做了一个示例： "},{type:b,tag:g,props:{href:z,rel:[k,l,m],target:n},children:[{type:a,value:z}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"可以直接访问查看效果，即便刷新页面也是能够响应的。支持嵌套路由、泛（Wildcard）路由及未找到（NoMatch）渲染。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"有几个需要注意的细节讲一下："}]},{type:a,value:c},{type:b,tag:A,props:{id:s},children:[{type:b,tag:g,props:{href:"#1-%E8%B7%AF%E7%94%B1%E7%9A%84%E8%AE%BE%E5%AE%9A",ariaHidden:B,tabIndex:C},children:[{type:b,tag:e,props:{className:[D,E]},children:[]}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果用的是自定义域名，则没有太大关系。但如果是一个非 xxx.github.io 的项目， 而是类似这样的入口路径 "},{type:b,tag:j,props:{},children:[{type:a,value:"xxx.github.io\u002Fxxx"}]},{type:a,value:" 就需要特别注意一下路由的命名，需要带上特定项目名称作为前缀。"}]},{type:a,value:c},{type:b,tag:A,props:{id:v},children:[{type:b,tag:g,props:{href:"#2-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%9A%84%E8%B7%AF%E5%BE%84",ariaHidden:B,tabIndex:C},children:[{type:b,tag:e,props:{className:[D,E]},children:[]}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"我在做尝试时候发现一个奇怪的现象"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,F]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"\u002Fhome\n\u002Fabout\n\u002Ftopics\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"这样一级的路由是可以访问的，但如果是"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,F]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"\u002Ftopics\u002Frouting\n\u002Ftopics\u002Fxxx\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"这样路由页面，在刷新之后会变成大白板，一开始我以为是需要在对应目录下分别都创建一个 404.html 后来发现并不是这样，而是我静态资源加载错误，后来发现是因为 404 页面中引用的静态资源（.js 文件）是类似这样的加载方式："}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,"language-html"]},children:[{type:b,tag:j,props:{},children:[{type:b,tag:e,props:{className:[f,G]},children:[{type:b,tag:e,props:{className:[f,G]},children:[{type:b,tag:e,props:{className:[f,h]},children:[{type:a,value:"\u003C"}]},{type:a,value:"script"}]},{type:a,value:" "},{type:b,tag:e,props:{className:[f,"attr-name"]},children:[{type:a,value:"src"}]},{type:b,tag:e,props:{className:[f,"attr-value"]},children:[{type:b,tag:e,props:{className:[f,h,"attr-equals"]},children:[{type:a,value:"="}]},{type:b,tag:e,props:{className:[f,h]},children:[{type:a,value:H}]},{type:a,value:".\u002Fapp.js"},{type:b,tag:e,props:{className:[f,h]},children:[{type:a,value:H}]}]},{type:b,tag:e,props:{className:[f,h]},children:[{type:a,value:"\u003E"}]}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"从当前目录下寻找，所以 js 资源也 404 了，就自然加载不出来。把引用路径改为绝对路径后就 OK 了。"}]},{type:a,value:c},{type:b,tag:"adsbygoogle",props:{},children:[{type:a,value:c}]},{type:a,value:c},{type:b,tag:y,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"贴上源码，位于："},{type:b,tag:g,props:{href:I,rel:[k,l,m],target:n},children:[{type:a,value:I}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"顺带着说明一波，该示例是用 HyperApp 实现，Parcel 打包。包含程序框架、路由、页面（JSX Templates）所有打包后，仅有 10kb 大小。"}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Hyperapp 是一个仅有 1kb 的双向数据绑定框架，有 State 管理和统一的 Actions 入口，支持路由插件（2kb）。"}]},{type:a,value:c},{type:b,tag:i,props:{},children:[{type:a,value:"Parcel 是一个 Webpack 的替代方案，免去了配置的烦恼，打包效率很高。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"后面我会再抽时间分享一些这样的东西，适合进阶玩家写出更极致简洁和高效兼顾的代码。"}]}]},dir:"\u002Fzh\u002Fbasic\u002Fknowledge",path:"\u002Fzh\u002Fbasic\u002Fknowledge\u002Fgithub-pages-spa-router",extension:".md",createdAt:J,updatedAt:J,to:"\u002Fbasic\u002Fknowledge\u002Fgithub-pages-spa-router"},prev:{title:"跨平台的Web中文字体解决方案",path:"\u002Fzh\u002Fbasic\u002Fknowledge\u002Ffonts",to:"\u002Fbasic\u002Fknowledge\u002Ffonts"},next:{title:"Travis-CI 每日构建",path:"\u002Fzh\u002Fbasic\u002Fknowledge\u002Ftravis-ci",to:"\u002Fbasic\u002Fknowledge\u002Ftravis-ci"}}],fetch:{},mutations:[]}}("text","element","\n","p","span","token","a","punctuation","li","code","nofollow","noopener","noreferrer","_blank","div","nuxt-content-highlight","pre","line-numbers","1-路由的设定",2,"1. 路由的设定","2-静态资源的路径","2. 静态资源的路径","ul","hr","https:\u002F\u002Fjs-cool.github.io\u002Fgithub-spa-demo\u002F","h2","true",-1,"icon","icon-link","language-text","tag","\"","https:\u002F\u002Fgithub.com\u002Fjs-cool\u002Fgithub-spa-demo","2023-04-10T01:57:54.072Z")));