__NUXT_JSONP__("/experience/design/architecture", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z){return {data:[{document:{slug:"architecture",description:"",title:"系统架构设计",position:2003,category:"经验篇-设计",toc:[{id:h,depth:2,text:h},{id:i,depth:q,text:i},{id:j,depth:q,text:j},{id:k,depth:q,text:k}],body:{type:"root",children:[{type:b,tag:"h2",props:{id:h},children:[{type:b,tag:g,props:{href:"#%E6%A0%B8%E5%BF%83%E6%80%9D%E6%83%B3%E5%8E%9F%E5%88%99",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:h}]},{type:a,value:c},{type:b,tag:r,props:{id:i},children:[{type:b,tag:g,props:{href:"#%E5%88%86%E6%B2%BB%E6%B3%95",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:i}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"即分而治之。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"将庞大的计算、存储压力向下级分摊。又可以看做是去中心化的一种实践方式。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"数据中心只承担一些核心数据的存储工作；每个服务器都可以存储部分非通用的数据，承担部分的计算及负载压力。下级路由、智能终端设备、智能移动设备等，都可以分摊服务器的压力。"}]},{type:a,value:c},{type:b,tag:"adsbygoogle",props:{},children:[{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:j},children:[{type:b,tag:g,props:{href:"#%E9%AB%98%E5%86%85%E8%81%9A%EF%BC%8C%E4%BD%8E%E8%80%A6%E5%90%88",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:j}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"耦合性与内聚性是模块独立性的两个定性标准，将软件系统划分模块时，尽量做到高内聚低耦合，提高模块的独立性，为设计高质量的软件结构奠定基础。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:s},{type:b,tag:e,props:{},children:[{type:a,value:"对外"}]},{type:b,tag:"strong",props:{},children:[{type:a,value:"低耦合，"}]},{type:b,tag:e,props:{},children:[{type:a,value:"对内"}]},{type:a,value:"**高内聚"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"有个例子很容易明白："}]},{type:a,value:c},{type:b,tag:"blockquote",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"一个程序有 50 个函数，这个程序执行得非常好；然而一旦你修改其中一个函数，其他 49 个函数都需要做修改，这就是高耦合的后果。一旦你理解了它，你编写概要设计的时候设计类或者模块自然会考虑到“高内聚，低耦合”。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"耦合、内聚的评估标准是**"},{type:b,tag:e,props:{},children:[{type:a,value:"强度"}]},{type:a,value:"**，耦合越弱越好，内聚越强越好；"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"所谓**"},{type:b,tag:e,props:{},children:[{type:a,value:"过度"}]},{type:a,value:"**指的是由于错误理解导致的效果相反的设计；"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"耦合指的模块之间的关系"}]},{type:a,value:"，最弱的耦合设计是通过一个主控模块来协调 n 个模块之间的运作。还是举一个我举过的例子：客户要求在界面上增加一个字段，你的项目要修改几个地方呢？如果你只要修改项目文档，那么你的开发构架就是最低强度的耦合，而这种设计 成熟的开发团队都已经做到了，他们使用开发工具通过项目模型驱动数据库和各层次的代码，而不是直接修改那些代码；"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"内聚指的是模块内部的功能"}]},{type:a,value:"，最强的内聚就是功能单一到不能拆分，也就是原子化；"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"所以**"},{type:b,tag:e,props:{},children:[{type:a,value:"强内聚和弱耦合是相辅相成的，一个良好的设计是由若干个强内聚模块以弱耦合的方式组装起来的。"}]},{type:a,value:s}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:k},children:[{type:b,tag:g,props:{href:"#%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:k}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"参考资料："}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:g,props:{href:t,rel:[u,v,w],target:x},children:[{type:a,value:t}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:g,props:{href:y,rel:[u,v,w],target:x},children:[{type:a,value:y}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"注意点： 前后端分离不单指 Web 的前后端，也包括客户端（前）和服务器（后）的分离。"}]}]},dir:"\u002Fzh\u002Fexperience\u002Fdesign",path:"\u002Fzh\u002Fexperience\u002Fdesign\u002Farchitecture",extension:".md",createdAt:z,updatedAt:z,to:"\u002Fexperience\u002Fdesign\u002Farchitecture"},prev:{title:"产品设计",path:"\u002Fzh\u002Fexperience\u002Fdesign\u002Fproduct",to:"\u002Fexperience\u002Fdesign\u002Fproduct"},next:{title:"系统架构设计实践",path:"\u002Fzh\u002Fexperience\u002Fdesign\u002Fsystem",to:"\u002Fexperience\u002Fdesign\u002Fsystem"}}],fetch:{},mutations:[]}}("text","element","\n","p","em","li","a","核心思想原则","分治法","高内聚，低耦合","前后端分离","true",-1,"span","icon","icon-link",3,"h3","**","https:\u002F\u002Fsegmentfault.com\u002Fa\u002F1190000002978095","nofollow","noopener","noreferrer","_blank","http:\u002F\u002F2014.jsconf.cn\u002Fslides\u002Fherman-taobaoweb\u002Findex.html","2021-09-01T00:54:35.488Z")));